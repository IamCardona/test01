{"ast":null,"code":"var _jsxFileName = \"/Users/iamcardonamhis/Desktop/next/shop/pages/user/login.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport firebase from '../../firebaseConfig';\nimport Layout from '../../components/layout';\nexport default function () {\n  const router = useRouter();\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Email no valido').required('La contraseña es obligatoria'),\n      password: Yup.string().required('La contraseña es obligatoria')\n    }),\n    onSubmit: async valores => {\n      const {\n        email,\n        password\n      } = valores;\n\n      try {\n        await firebase.auth().signInWithEmailAndPassword(email, password);\n        router.push('/');\n      } catch (e) {\n        console.log(e);\n\n        if (e.message === \"The password is invalid or the user does not have a password.\") {\n          setError(\"Contraseña incorrecta\");\n        }\n      }\n    }\n  });\n  return __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(\"img\", {\n    style: {\n      marginTop: \"3rem\"\n    },\n    src: \"/logo.png\",\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: \"1rem\",\n      fontSize: \"1.3rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Inicia Sesi\\xF3n en Tardan\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })));\n}\n/**\n * \n * <form onSubmit={formik.handleSubmit}>\n\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.email}\n                    />\n\n                    {formik.touched.email && formik.errors.email ? (\n                        <div>\n                            <h1>{formik.errors.email}</h1>\n                        </div> \n                    ) : null}\n\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.password}\n                    />\n\n                    {formik.touched.password && formik.errors.password ? (\n                        <div>\n                            <h1>{formik.errors.password}</h1>\n                        </div> \n                    ) : null}\n\n                </div>\n\n                <input type=\"submit\" value=\"Submit\" />\n\n            </form>\n */","map":{"version":3,"sources":["/Users/iamcardonamhis/Desktop/next/shop/pages/user/login.js"],"names":["React","useState","useRouter","useFormik","Yup","firebase","Layout","router","error","setError","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","valores","auth","signInWithEmailAndPassword","push","e","console","log","message","width","textAlign","marginTop","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT,QAAyB,QAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,eAAe,YAAW;AACtB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAM;AAAA,OAACM,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMS,MAAM,GAAGP,SAAS,CAAC;AACrBQ,IAAAA,aAAa,EAAE;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KADM;AAKrBC,IAAAA,gBAAgB,EAAEV,GAAG,CAACW,MAAJ,CAAW;AACzBH,MAAAA,KAAK,EAAER,GAAG,CAACY,MAAJ,GACFJ,KADE,CACI,iBADJ,EAEFK,QAFE,CAEO,8BAFP,CADkB;AAIzBJ,MAAAA,QAAQ,EAAET,GAAG,CAACY,MAAJ,GACLC,QADK,CACI,8BADJ;AAJe,KAAX,CALG;AAYrBC,IAAAA,QAAQ,EAAE,MAAMC,OAAN,IAAiB;AACvB,YAAM;AAAEP,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsBM,OAA5B;;AAEA,UAAI;AACA,cAAMd,QAAQ,CAACe,IAAT,GAAgBC,0BAAhB,CAA2CT,KAA3C,EAAkDC,QAAlD,CAAN;AACAN,QAAAA,MAAM,CAACe,IAAP,CAAY,GAAZ;AACH,OAHD,CAGE,OAAMC,CAAN,EAAS;AACPC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AAEA,YAAGA,CAAC,CAACG,OAAF,KAAc,+DAAjB,EAAkF;AAC9EjB,UAAAA,QAAQ,CAAC,uBAAD,CAAR;AACH;AACJ;AACJ;AAzBoB,GAAD,CAAxB;AA4BA,SACI;AAAK,IAAA,KAAK,EAAE;AAAEkB,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAmC,IAAA,GAAG,EAAC,WAAvC;AAAmD,IAAA,GAAG,EAAC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAAEA,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ,CADA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CADJ,CADJ;AAaH;AAED","sourcesContent":["import React, { useState } from 'react'\nimport { useRouter } from 'next/router'\n\nimport { useFormik } from'formik'\nimport * as Yup from 'yup'\n\nimport firebase from '../../firebaseConfig'\nimport Layout from '../../components/layout'\n\nexport default function() {\n    const router = useRouter()\n    const [error, setError] = useState(null)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validationSchema: Yup.object({\n            email: Yup.string()\n                .email('Email no valido')\n                .required('La contraseña es obligatoria'),\n            password: Yup.string()\n                .required('La contraseña es obligatoria')\n        }),\n        onSubmit: async valores => {\n            const { email, password } = valores;\n\n            try {\n                await firebase.auth().signInWithEmailAndPassword(email, password)\n                router.push('/')\n            } catch(e) {\n                console.log(e)\n\n                if(e.message === \"The password is invalid or the user does not have a password.\") {\n                    setError(\"Contraseña incorrecta\")\n                }\n            }\n        }\n    })\n\n    return(\n        <div style={{ width: \"100%\", textAlign: \"center\" }}>\n            <div>\n            <div>\n                <img style={{ marginTop: \"3rem\" }} src=\"/logo.png\" alt=\"Logo\" />\n                <div style={{ marginTop: \"1rem\", fontSize: \"1.3rem\" }}>Inicia Sesión en Tardan</div>\n            </div>\n            <div>\n\n            </div>\n            </div>\n        </div>\n    )\n}\n\n/**\n * \n * <form onSubmit={formik.handleSubmit}>\n\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.email}\n                    />\n\n                    {formik.touched.email && formik.errors.email ? (\n                        <div>\n                            <h1>{formik.errors.email}</h1>\n                        </div> \n                    ) : null}\n\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.password}\n                    />\n\n                    {formik.touched.password && formik.errors.password ? (\n                        <div>\n                            <h1>{formik.errors.password}</h1>\n                        </div> \n                    ) : null}\n\n                </div>\n\n                <input type=\"submit\" value=\"Submit\" />\n\n            </form>\n */"]},"metadata":{},"sourceType":"module"}