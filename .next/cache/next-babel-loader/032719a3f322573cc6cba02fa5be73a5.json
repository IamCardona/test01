{"ast":null,"code":"/* import React, { useState } from 'react'\nimport { useRouter } from 'next/router'\n\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\n\nimport firebase from '../../firebaseConfig'\n\nexport default function() {\n    const router = useRouter()\n\n    const [error, setError] = useState(null)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validationSchema: Yup.object({\n            email: Yup.string()\n                .email('El email no es valido')\n                .required('El email es oblogatorio'),\n            password: Yup.string()\n                .required('La contraseña es obligatoria')\n        }),\n        onSubmit: async valores => {\n            const { email, password } = valores\n            try {\n                await firebase.auth().createUserWithEmailAndPassword(email, password)\n                router.push('/');\n            } catch(e) {\n                console.log(e)\n            }\n        }\n    })\n\n    return(\n        <div>\n            <h1>Register</h1>\n\n            {error && (\n                <div>\n                    {error}\n                </div>\n            )}\n\n            <form onSubmit={formik.handleSubmit}>\n\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.email}\n                    />\n\n                    {formik.touched.email && formik.errors.email ? (\n                        <div>\n                            <h1>{formik.errors.email}</h1>\n                        </div> \n                    ) : null}\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.password}\n                    />\n\n                    {formik.touched.password && formik.errors.password ? (\n                        <div>\n                            <h1>{formik.errors.password}</h1>\n                        </div> \n                    ) : null}\n                </div>\n\n                <input type=\"submit\" value=\"Submit\" />\n\n            </form>\n        </div>\n    )\n} */","map":{"version":3,"sources":["/Users/iamcardonamhis/Desktop/next/shop/pages/user/register.js"],"names":[],"mappings":"AAAA","sourcesContent":["/* import React, { useState } from 'react'\nimport { useRouter } from 'next/router'\n\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\n\nimport firebase from '../../firebaseConfig'\n\nexport default function() {\n    const router = useRouter()\n\n    const [error, setError] = useState(null)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validationSchema: Yup.object({\n            email: Yup.string()\n                .email('El email no es valido')\n                .required('El email es oblogatorio'),\n            password: Yup.string()\n                .required('La contraseña es obligatoria')\n        }),\n        onSubmit: async valores => {\n            const { email, password } = valores\n            try {\n                await firebase.auth().createUserWithEmailAndPassword(email, password)\n                router.push('/');\n            } catch(e) {\n                console.log(e)\n            }\n        }\n    })\n\n    return(\n        <div>\n            <h1>Register</h1>\n\n            {error && (\n                <div>\n                    {error}\n                </div>\n            )}\n\n            <form onSubmit={formik.handleSubmit}>\n\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.email}\n                    />\n\n                    {formik.touched.email && formik.errors.email ? (\n                        <div>\n                            <h1>{formik.errors.email}</h1>\n                        </div> \n                    ) : null}\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.password}\n                    />\n\n                    {formik.touched.password && formik.errors.password ? (\n                        <div>\n                            <h1>{formik.errors.password}</h1>\n                        </div> \n                    ) : null}\n                </div>\n\n                <input type=\"submit\" value=\"Submit\" />\n\n            </form>\n        </div>\n    )\n} */"]},"metadata":{},"sourceType":"script"}