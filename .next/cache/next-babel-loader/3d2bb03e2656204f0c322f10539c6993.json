{"ast":null,"code":"var _jsxFileName = \"/Users/iamcardonamhis/Desktop/next/shop/pages/user/login.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport firebase from '../../firebaseConfig';\nexport default function () {\n  const router = useRouter();\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Email no valido').required('La contraseña es obligatoria'),\n      password: Yup.string().required('La contraseña es obligatoria')\n    }),\n    onSubmit: async valores => {\n      const {\n        email,\n        password\n      } = valores;\n\n      try {\n        await firebase.auth().signInWithEmailAndPassword(email, password);\n        router.push('/');\n      } catch (e) {\n        console.log(e);\n\n        if (e.message === \"The password is invalid or the user does not have a password.\") {\n          setError(\"Contraseña incorrecta\");\n        }\n      }\n    }\n  });\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundColor: \"rgb(247, 247, 247)\",\n      width: \"400px\",\n      margin: \"3rem auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    style: {\n      marginTop: \"3rem\"\n    },\n    src: \"/logo.png\",\n    alt: \"Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    style: {\n      marginTop: \"1rem\",\n      fontSize: \"1.4rem\",\n      color: \"#112645\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Inicia Sesi\\xF3n en Tardan\")), __jsx(\"div\", {\n    style: {\n      width: \"90%\",\n      textAlign: \"center\",\n      margin: \"auto 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, __jsx(Form, {\n    name: \"normal_login\",\n    className: \"login-form\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please input your Username!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 36\n      }\n    }),\n    placeholder: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, __jsx(Input, {\n    prefix: __jsx(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Item, {\n    name: \"remember\",\n    valuePropName: \"checked\",\n    noStyle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, __jsx(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Remember me\")), __jsx(\"a\", {\n    className: \"login-form-forgot\",\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, \"Forgot password\")), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"login-form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, \"Log in\"), \"Or \", __jsx(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 24\n    }\n  }, \"register now!\"))))));\n}\n/**\n * \n * <form onSubmit={formik.handleSubmit}>\n\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.email}\n                    />\n\n                    {formik.touched.email && formik.errors.email ? (\n                        <div>\n                            <h1>{formik.errors.email}</h1>\n                        </div> \n                    ) : null}\n\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.password}\n                    />\n\n                    {formik.touched.password && formik.errors.password ? (\n                        <div>\n                            <h1>{formik.errors.password}</h1>\n                        </div> \n                    ) : null}\n\n                </div>\n\n                <input type=\"submit\" value=\"Submit\" />\n\n            </form>\n */","map":{"version":3,"sources":["/Users/iamcardonamhis/Desktop/next/shop/pages/user/login.js"],"names":["React","useState","useRouter","useFormik","Yup","Form","Input","Button","Checkbox","UserOutlined","LockOutlined","firebase","router","error","setError","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","valores","auth","signInWithEmailAndPassword","push","e","console","log","message","onFinish","values","width","textAlign","backgroundColor","margin","marginTop","fontSize","color","remember"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useRouter } from 'next/router'\n\nimport { useFormik } from'formik'\nimport * as Yup from 'yup'\n\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nimport firebase from '../../firebaseConfig'\n\nexport default function() {\n    const router = useRouter()\n    const [error, setError] = useState(null)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validationSchema: Yup.object({\n            email: Yup.string()\n                .email('Email no valido')\n                .required('La contraseña es obligatoria'),\n            password: Yup.string()\n                .required('La contraseña es obligatoria')\n        }),\n        onSubmit: async valores => {\n            const { email, password } = valores;\n\n            try {\n                await firebase.auth().signInWithEmailAndPassword(email, password)\n                router.push('/')\n            } catch(e) {\n                console.log(e)\n\n                if(e.message === \"The password is invalid or the user does not have a password.\") {\n                    setError(\"Contraseña incorrecta\")\n                }\n            }\n        }\n    })\n\n    const onFinish = values => {\n        console.log('Received values of form: ', values);\n      };\n\n    return(\n        <div style={{ width: \"100%\", textAlign: \"center\" }}>\n            <div style={{ backgroundColor: \"rgb(247, 247, 247)\", width: \"400px\", margin: \"3rem auto\" }}>\n                <div>\n                    <img style={{ marginTop: \"3rem\" }} src=\"/logo.png\" alt=\"Logo\" />\n                    <div style={{ marginTop: \"1rem\", fontSize: \"1.4rem\", color: \"#112645\" }}>Inicia Sesión en Tardan</div>\n                </div>\n                <div style={{ width: \"90%\", textAlign: \"center\", margin: \"auto 0\" }}>\n                <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n                >\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'Please input your Username!',\n                    },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'Please input your Password!',\n                    },\n                    ]}\n                >\n                    <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                    <Checkbox>Remember me</Checkbox>\n                    </Form.Item>\n\n                    <a className=\"login-form-forgot\" href=\"\">\n                    Forgot password\n                    </a>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                    Log in\n                    </Button>\n                    Or <a href=\"\">register now!</a>\n                </Form.Item>\n                </Form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n/**\n * \n * <form onSubmit={formik.handleSubmit}>\n\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.email}\n                    />\n\n                    {formik.touched.email && formik.errors.email ? (\n                        <div>\n                            <h1>{formik.errors.email}</h1>\n                        </div> \n                    ) : null}\n\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.password}\n                    />\n\n                    {formik.touched.password && formik.errors.password ? (\n                        <div>\n                            <h1>{formik.errors.password}</h1>\n                        </div> \n                    ) : null}\n\n                </div>\n\n                <input type=\"submit\" value=\"Submit\" />\n\n            </form>\n */"]},"metadata":{},"sourceType":"module"}