{"ast":null,"code":"var _jsxFileName = \"/Users/iamcardonamhis/Desktop/next/shop/pages/user/register.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport firebase from '../../firebaseConfig';\nexport default function () {\n  const router = useRouter();\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('El email no es valido').required('El email es oblogatorio'),\n      password: Yup.string().required('La contraseña es obligatoria')\n    }),\n    onSubmit: async valores => {\n      const {\n        email,\n        password\n      } = valores;\n\n      try {\n        await firebase.auth().createUserWithEmailAndPassword(email, password);\n        router.push('/');\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Register\"), error && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, error), __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, formik.errors.email)) : null), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, \"Password\"), __jsx(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), formik.touched.password && formik.errors.password ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, formik.errors.password)) : null), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/iamcardonamhis/Desktop/next/shop/pages/user/register.js"],"names":["React","useState","useRouter","useFormik","Yup","firebase","router","error","setError","formik","initialValues","email","password","validationSchema","object","string","required","onSubmit","valores","auth","createUserWithEmailAndPassword","push","e","console","log","handleSubmit","handleChange","handleBlur","values","touched","errors"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { useRouter } from 'next/router'\n\nimport { useFormik } from 'formik'\nimport * as Yup from 'yup'\n\nimport firebase from '../../firebaseConfig'\n\nexport default function() {\n    const router = useRouter()\n\n    const [error, setError] = useState(null)\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: ''\n        },\n        validationSchema: Yup.object({\n            email: Yup.string()\n                .email('El email no es valido')\n                .required('El email es oblogatorio'),\n            password: Yup.string()\n                .required('La contraseña es obligatoria')\n        }),\n        onSubmit: async valores => {\n            const { email, password } = valores\n            try {\n                await firebase.auth().createUserWithEmailAndPassword(email, password)\n                router.push('/');\n            } catch(e) {\n                console.log(e)\n            }\n        }\n    })\n\n    return(\n        <div>\n            <h1>Register</h1>\n\n            {error && (\n                <div>\n                    {error}\n                </div>\n            )}\n\n            <form onSubmit={formik.handleSubmit}>\n\n                <div>\n                    <label htmlFor=\"email\">Email</label>\n                    <input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.email}\n                    />\n\n                    {formik.touched.email && formik.errors.email ? (\n                        <div>\n                            <h1>{formik.errors.email}</h1>\n                        </div> \n                    ) : null}\n                </div>\n\n                <div>\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        value={formik.values.password}\n                    />\n\n                    {formik.touched.password && formik.errors.password ? (\n                        <div>\n                            <h1>{formik.errors.password}</h1>\n                        </div> \n                    ) : null}\n                </div>\n\n                <input type=\"submit\" value=\"Submit\" />\n\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}